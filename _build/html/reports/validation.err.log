Traceback (most recent call last):
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/user/opt/anaconda3/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/user/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
Pij=mismatch_matrix.values[:,:]                   # mismatch data 
K=len(Pij[0:])
Cos_data=np.zeros([K,K])
for i in range(K):
    for j in range(K):
        Cos_data[i,j]=np.cos(Pij[i,j]*np.pi)      # collinearity of functions based on mismatches

# vectors to fill in 
Norm=np.zeros([K,K]) 
Cos_hat=np.zeros([K,K])  

# theoretical prediction for the collinearity of functions based on their collinearity/mismatches with all others
for i in range(K):
    for j in range(K):
        Cij=np.delete(np.delete(Cos_data,[i,j],0),[i,j],1)
        R=inv(Cij)
        Norm[i,j]=norm(R)
        u=np.delete(Cos_data[i,:],[i,j])
        v=np.delete(Cos_data[j,:],[i,j])
        Cos_hat[i,j]=np.dot(np.dot(R,u),v)
        up=np.delete(Pij[i,:],[i,j])
        vp=np.delete(Pij[j,:],[i,j])
        
cos=np.ravel(Cos_data)    # ground truth
cos_hat=np.ravel(Cos_hat) # prediction
normM=np.ravel(Norm)      # sensitivity

roof=15 # upper bound on sensitivity - if the norm is too high this process won't work

# Plot the prediction against the empirical results (scale points by Norm - larger points with lower norms, more accurate)
plt.figure(num=None, figsize=(3, 3), dpi=100, facecolor='w', edgecolor='k')

plt.scatter(cos_hat[normM<roof],cos[normM<roof],s=500/normM[normM<roof], color = (0.3, 0.3, 0.3))
plt.title('All biomes', fontsize=14)
plt.plot([-1,1],[-1,1],'--', color = (0.5, 0.5, 0.5))
plt.fill_between([1,2],[-1,-1],[1.05,1.05],color=(0.5, 0.5, 0.5),alpha=0.3)
plt.fill_between([-2,-1],[-1,-1],[1.05,1.05],color=(0.5, 0.5, 0.5),alpha=0.3)

plt.xlabel('Prediction ($\hat{C}_{ij}$)',fontsize=14)
plt.ylabel('Reality ($C_{ij}=\cos(\pi P_{ij}))$',fontsize=14)
plt.ylim(-1,1.05)
plt.xlim(-2,2)

# linear fit
x=np.concatenate([cos_hat[normM<roof],cos_hat[normM<roof]])
y=np.concatenate([cos[normM<roof],cos[normM<roof]])
lin=np.polyfit(x,y,1)
z=np.linspace(-2,2,100)
plt.plot(z,z*lin[0]+lin[1],'k-',lw=1);
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/j1/jssjvr551fj95tgptjhn_4bc0000gp/T/ipykernel_66071/718587447.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mPij[0m[0;34m=[0m[0mmismatch_matrix[0m[0;34m.[0m[0mvalues[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;34m:[0m[0;34m][0m                   [0;31m# mismatch data[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mK[0m[0;34m=[0m[0mlen[0m[0;34m([0m[0mPij[0m[0;34m[[0m[0;36m0[0m[0;34m:[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0mCos_data[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;34m[[0m[0mK[0m[0;34m,[0m[0mK[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mK[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mK[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'mismatch_matrix' is not defined
NameError: name 'mismatch_matrix' is not defined

